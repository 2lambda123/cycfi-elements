###############################################################################
#  Copyright (c) 2016-2019 Joel de Guzman
#
#  Distributed under the MIT License (https://opensource.org/licenses/MIT)
###############################################################################

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

project(${ELEMENTS_APP_PROJECT})

if (${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
   set (MACOSX YES)
endif()

if (${CMAKE_SYSTEM_NAME} MATCHES "Linux")
   set (LINUX YES)
endif()

###############################################################################
# Sources (and Resources)

if (NOT DEFINED ELEMENTS_ICON_FONT)
   set(ELEMENTS_ICON_FONT ${CMAKE_CURRENT_LIST_DIR}/resources/fonts/elements_basic.ttf)
endif()

set(ELEMENTS_RESOURCES
   ${ELEMENTS_ICON_FONT}
   ${CMAKE_CURRENT_LIST_DIR}/resources/fonts/OpenSans-Bold.ttf
   ${CMAKE_CURRENT_LIST_DIR}/resources/fonts/OpenSans-Light.ttf
   ${CMAKE_CURRENT_LIST_DIR}/resources/fonts/OpenSans-Regular.ttf
   ${CMAKE_CURRENT_LIST_DIR}/resources/fonts/Roboto-Bold.ttf
   ${CMAKE_CURRENT_LIST_DIR}/resources/fonts/Roboto-Light.ttf
   ${CMAKE_CURRENT_LIST_DIR}/resources/fonts/Roboto-Regular.ttf
)

if (LINUX)
   set(
      ELEMENTS_APP_RESOURCES
      ${ELEMENTS_APP_RESOURCES} ${CMAKE_CURRENT_SOURCE_DIR}/resources/config.json
   )
   file(
      COPY ${ELEMENTS_RESOURCES} ${ELEMENTS_APP_RESOURCES}
      DESTINATION ${CMAKE_CURRENT_BINARY_DIR}
   )
endif()

source_group(Resources
   FILES
   ${ELEMENTS_RESOURCES}
   ${ELEMENTS_APP_RESOURCES}
)

###############################################################################
# The executable App

if (NOT DEFINED ELEMENTS_APP_SOURCES)
   set(ELEMENTS_APP_SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/main.cpp)
endif()

if (MACOSX)
   add_executable(
      ${ELEMENTS_APP_PROJECT}
      MACOSX_BUNDLE
      ${ELEMENTS_APP_SOURCES}
      ${ELEMENTS_RESOURCES}
      ${ELEMENTS_APP_RESOURCES}
   )
endif()

if (LINUX)
   add_executable(
      ${ELEMENTS_APP_PROJECT}
      ${ELEMENTS_APP_SOURCES}
      ${ELEMENTS_RESOURCES}
      ${ELEMENTS_APP_RESOURCES}
   )
endif()

if (WIN32)

   set(CMAKE_EXE_LINKER_FLAGS
      "${CMAKE_EXE_LINKER_FLAGS} /SUBSYSTEM:WINDOWS /ENTRY:mainCRTStartup"
   )

   add_executable(
      ${ELEMENTS_APP_PROJECT}
      WIN32
      ${ELEMENTS_APP_SOURCES}
      ${ELEMENTS_RESOURCES}
      ${ELEMENTS_APP_RESOURCES}
   )
endif()

###############################################################################
# Libraries and linking

target_link_libraries(${ELEMENTS_APP_PROJECT}
   ${ELEMENTS_APP_DEPENDENCIES}
   libelements
)

if (NOT DEFINED ELEMENTS_APP_INCLUDE_DIRECTORIES)
   set(ELEMENTS_APP_INCLUDE_DIRECTORIES "${CMAKE_CURRENT_SOURCE_DIR}/include")
endif()

target_include_directories(${ELEMENTS_APP_PROJECT}
   PRIVATE "${ELEMENTS_APP_INCLUDE_DIRECTORIES}"
)

if (MACOSX)
   set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -framework AppKit")
endif()

###############################################################################
# Resource file properties

if (NOT DEFINED ELEMENTS_APP_TITLE)
   set(ELEMENTS_APP_TITLE ${ELEMENTS_APP_PROJECT})
endif()

if (MACOSX)
   set(MACOSX_BUNDLE_BUNDLE_NAME ${ELEMENTS_APP_TITLE})
   set(MACOSX_BUNDLE_COPYRIGHT ${ELEMENTS_APP_COPYRIGHT})
   set(MACOSX_BUNDLE_GUI_IDENTIFIER ${ELEMENTS_APP_ID})
   set(MACOSX_BUNDLE_SHORT_VERSION_STRING ${ELEMENTS_APP_VERSION})
endif()

if (MACOSX)
   set_source_files_properties(
      ${ELEMENTS_RESOURCES}
      ${ELEMENTS_APP_RESOURCES}
      PROPERTIES
      MACOSX_PACKAGE_LOCATION Resources
   )

   set_target_properties(
      ${ELEMENTS_APP_PROJECT}
      PROPERTIES
      MACOSX_BUNDLE_INFO_PLIST ${CMAKE_CURRENT_LIST_DIR}/resources/macos/plist.in
   )
endif()

