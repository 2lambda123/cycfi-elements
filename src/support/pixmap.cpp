/*=================================================================================================   Copyright (c) 2016 Joel de Guzman   Licensed under a Creative Commons Attribution-ShareAlike 4.0 International.   http://creativecommons.org/licenses/by-sa/4.0/=================================================================================================*/#include <photon/support/pixmap.hpp>#define STB_IMAGE_IMPLEMENTATION#include <photon/support/detail/stb_image.h>namespace photon{   pixmap::pixmap(char const* filename)    : _surface(nullptr)   {      int w, h, components;      uint8_t* src_data = stbi_load(filename, &w, &h, &components, 4);      if (src_data)      {         _surface = cairo_image_surface_create(CAIRO_FORMAT_ARGB32, w, h);         uint8_t* dest_data = cairo_image_surface_get_data(_surface);         size_t   src_stride = w * 4;         size_t   dest_stride = cairo_image_surface_get_stride(_surface);         for (size_t y = 0; y != h; ++y)         {            uint8_t* src = src_data + (y * src_stride);            uint8_t* dest = dest_data + (y * dest_stride);            for (size_t x = 0; x != w; ++x)            {               dest[0] = src[2];    // blue               dest[1] = src[1];    // green               dest[2] = src[0];    // red               dest[3] = src[3];    // alpha               src += 4;               dest += 4;            }         }         cairo_surface_mark_dirty(_surface);         stbi_image_free(src_data);      }      // $$$ TODO: throw load failure $$$   }   pixmap::~pixmap()   {      if (_surface)         cairo_surface_destroy(_surface);   }   photon::size pixmap::size() const   {      return {         float(cairo_image_surface_get_width(_surface)),         float(cairo_image_surface_get_height(_surface))      };   }}