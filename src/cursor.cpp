/*=================================================================================================   Copyright (c) 2016 Joel de Guzman   Licensed under a Creative Commons Attribution-ShareAlike 4.0 International.   http://creativecommons.org/licenses/by-sa/4.0/=================================================================================================*/#include <photon/cursor.hpp>#include <photon/window.hpp>#include <GLFW/glfw3.h>namespace photon{   uint32_t map_type(cursor::type t)   {      switch (t)      {         case cursor::arrow:            return GLFW_ARROW_CURSOR;         case cursor::ibeam:            return GLFW_IBEAM_CURSOR;         case cursor::cross_hair:            return GLFW_CROSSHAIR_CURSOR;         case cursor::hand:            return GLFW_HAND_CURSOR;         case cursor::h_resize:            return GLFW_HRESIZE_CURSOR;         case cursor::v_resize:            return GLFW_VRESIZE_CURSOR;      }   }   cursor::cursor(type t)    : _cursor(glfwCreateStandardCursor(map_type(t)), &glfwDestroyCursor)   {   }   void cursor::set(GLFWwindow* window)   {      glfwSetCursor(window, _cursor.get());   }}